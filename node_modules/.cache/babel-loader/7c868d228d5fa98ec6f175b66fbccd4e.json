{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nutzer\\\\Documents\\\\MyGit\\\\whoami-cards-live\\\\whoami-cards\\\\src\\\\components\\\\MyCards.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from \"react\";\nimport TinderCard from \"react-tinder-card\";\nimport \"../MyCards.css\";\nimport axios from \"../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyCards() {\n  _s();\n\n  const [people, setPeople] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const req = await axios.get(\"/whoami/cards\");\n      setPeople(req.data); //set the setPeople for whatever requested data comes back\n    }\n\n    fetchData();\n  }, []); // the empty square brackets are used to run the code only once\n\n  const swiped = (direction, nameToDelete) => {\n    console.log(\"revoming: \" + nameToDelete);\n  };\n\n  const outOfFrame = name => {\n    console.log(name + \" left the screen\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MyCards\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myCards__cardContainer\",\n      children: people.map(person => /*#__PURE__*/_jsxDEV(TinderCard, {\n        className: \"swipe\",\n        preventSwipe: [\"up\", \"down\"] // only swipe left and right\n        ,\n        onSwipe: dir => swiped(dir, person.name),\n        onCardLeftScreen: () => outOfFrame(person.name),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundImage: `url(${person.url})`\n          },\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: person.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, person.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyCards, \"iLHt2u73MC8pQH7JexuLSo07ahk=\");\n\n_c = MyCards;\nexport default MyCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyCards\");","map":{"version":3,"sources":["C:/Users/Nutzer/Documents/MyGit/whoami-cards-live/whoami-cards/src/components/MyCards.js"],"names":["React","useEffect","useState","TinderCard","axios","MyCards","people","setPeople","fetchData","req","get","data","swiped","direction","nameToDelete","console","log","outOfFrame","name","map","person","dir","backgroundImage","url"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,UAAlB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeO,SAAf,GAA2B;AACzB,YAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,eAAV,CAAlB;AACAH,MAAAA,SAAS,CAACE,GAAG,CAACE,IAAL,CAAT,CAFyB,CAEJ;AACtB;;AACDH,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT,CAHiB,CAST;;AAER,QAAMI,MAAM,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeF,YAA3B;AACD,GAFD;;AAIA,QAAMG,UAAU,GAAIC,IAAD,IAAU;AAC3BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,GAAG,kBAAnB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,gBACGZ,MAAM,CAACa,GAAP,CAAYC,MAAD,iBACV,QAAC,UAAD;AACE,QAAA,SAAS,EAAC,OADZ;AAGE,QAAA,YAAY,EAAE,CAAC,IAAD,EAAO,MAAP,CAHhB,CAGgC;AAHhC;AAIE,QAAA,OAAO,EAAGC,GAAD,IAAST,MAAM,CAACS,GAAD,EAAMD,MAAM,CAACF,IAAb,CAJ1B;AAKE,QAAA,gBAAgB,EAAE,MAAMD,UAAU,CAACG,MAAM,CAACF,IAAR,CALpC;AAAA,+BAOE;AACE,UAAA,KAAK,EAAE;AAAEI,YAAAA,eAAe,EAAG,OAAMF,MAAM,CAACG,GAAI;AAArC,WADT;AAEE,UAAA,SAAS,EAAC,MAFZ;AAAA,iCAIE;AAAA,sBAAKH,MAAM,CAACF;AAAZ;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA;AAPF,SAEOE,MAAM,CAACF,IAFd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAzCQb,O;;KAAAA,O;AA2CT,eAAeA,OAAf","sourcesContent":["import { React, useEffect, useState } from \"react\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport \"../MyCards.css\";\r\nimport axios from \"../axios\";\r\n\r\nfunction MyCards() {\r\n  const [people, setPeople] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const req = await axios.get(\"/whoami/cards\");\r\n      setPeople(req.data); //set the setPeople for whatever requested data comes back\r\n    }\r\n    fetchData();\r\n  }, []); // the empty square brackets are used to run the code only once\r\n\r\n  const swiped = (direction, nameToDelete) => {\r\n    console.log(\"revoming: \" + nameToDelete);\r\n  };\r\n\r\n  const outOfFrame = (name) => {\r\n    console.log(name + \" left the screen\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"MyCards\">\r\n      <div className=\"myCards__cardContainer\">\r\n        {people.map((person) => (\r\n          <TinderCard\r\n            className=\"swipe\"\r\n            key={person.name}\r\n            preventSwipe={[\"up\", \"down\"]} // only swipe left and right\r\n            onSwipe={(dir) => swiped(dir, person.name)}\r\n            onCardLeftScreen={() => outOfFrame(person.name)}\r\n          >\r\n            <div\r\n              style={{ backgroundImage: `url(${person.url})` }}\r\n              className=\"card\"\r\n            >\r\n              <h3>{person.name}</h3>\r\n            </div>\r\n          </TinderCard>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyCards;\r\n"]},"metadata":{},"sourceType":"module"}